package com.app.spring.dao;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Isolation;
import org.springframework.transaction.annotation.Transactional;

import com.app.spring.entities.Catalog;

@Repository("txn")
public class TransactionTest {
	
	@Autowired
	private SessionFactory sf;

	@Transactional(isolation = Isolation.READ_UNCOMMITTED, rollbackFor = Exception.class)
	public void wareHouseReadUncomitted(Catalog catalog) throws Exception
	{
		
		Session ses=sf.getCurrentSession();
	
	/*
	* Insert new item
	*/
	 ses.save(catalog);
	System.out.println("Row Inserted, Waiting for reading");
	/*
	* Wait the other transaction read
	*/
	Thread.currentThread().sleep(5000);
	/*
	* Rollback transaction
	*/
	throw new Exception("Insert Rollback");
	}
	
	
}
